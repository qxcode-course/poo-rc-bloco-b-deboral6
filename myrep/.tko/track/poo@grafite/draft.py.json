{
    "patches": [
        {
            "label": "2025-10-27_14-05-13",
            "content": "@@ -1970,1073 +1970,8 @@\n s%22)%0A\n-%0Alapiseira = None %0A%0Awhile True:%0A    entrada = input().split()%0A    if len(entrada) == 0:%0A        continue%0A%0A    comando = entrada%5B0%5D%0A%0A    if comando == %22end%22:%0A        break%0A%0A    elif comando == %22iniciar%22:%0A        calibre = float(entrada%5B1%5D)%0A        lapiseira = Lapiseira(calibre)%0A%0A    elif comando == %22inserir%22:%0A        if lapiseira is None:%0A            print(%22fail: lapiseira nao iniciada%22)%0A            continue%0A        calibre = float(entrada%5B1%5D)%0A        dureza = entrada%5B2%5D%0A        tamanho = int(entrada%5B3%5D)%0A        grafite = Grafite(calibre, dureza, tamanho)%0A        lapiseira.inserir(grafite)%0A%0A    elif comando == %22remover%22:%0A        if lapiseira is None:%0A            print(%22fail: lapiseira nao iniciada%22)%0A            continue%0A        lapiseira.remover()%0A%0A    elif comando == %22escrever%22:%0A        if lapiseira is None:%0A            print(%22fail: lapiseira nao iniciada%22)%0A            continue%0A        folhas = int(entrada%5B1%5D)%0A        lapiseira.escrever(folhas)%0A%0A    elif comando == %22show%22:%0A        print(lapiseira)%0A%0A    else:%0A        print(%22fail: comando invalido%22)%0A%0A\n     \n",
            "lines": "72"
        },
        {
            "label": "2025-10-27_14-07-02",
            "content": "@@ -2162,17 +2162,20 @@\n  == %22ini\n-t\n+ciar\n %22:%0A     \n@@ -2271,17 +2271,18 @@\n = %22inser\n-t\n+ir\n %22:%0A     \n@@ -2590,16 +2590,17 @@\n  %22remove\n+r\n %22:%0A     \n@@ -2749,13 +2749,16 @@\n == %22\n-write\n+escrever\n %22:%0A \n",
            "lines": "118"
        },
        {
            "label": "2025-10-27_14-09-27",
            "content": "@@ -596,131 +596,8 @@\n ne%0A%0A\n-class Lapiseira:%0A    def __init__(self, espessura: float):%0A        self.espessura = espessura%0A        self.grafite = None%0A%0A\n     \n@@ -634,34 +634,27 @@\n self.grafite\n- is None\n :%0A\n+ \n            r\n@@ -657,32 +657,33 @@\n    return f%22\n-calibre:\n+Lapiseira\n  %7Bself.espes\n@@ -687,25 +687,30 @@\n pessura%7D\n-,\n+mm com\n  grafite\n : null%22%0A\n@@ -705,16 +705,40 @@\n fite\n-: null%22%0A\n+ %7Bself.grafite%7D%22%0A        else:%0A \n     \n@@ -757,16 +757,17 @@\n n f%22\n-calibre:\n+Lapiseira\n  %7Bse\n@@ -783,35 +783,25 @@\n ura%7D\n-, grafite: %7Bself.\n+mm (sem \n grafite\n-%7D%22%0A\n+)%22\n %0A%0A  \n",
            "lines": "118"
        },
        {
            "label": "2025-10-27_14-11-55",
            "content": "@@ -229,38 +229,100 @@\n  = %7B\n+%0A            \n %22HB%22:\n+ \n 1,\n+%0A           \n  %222B%22:\n+ \n 2,\n+%0A           \n  %224B%22:\n+ \n 4,\n- %226B%22:6\n+%0A            %226B%22: 6%0A        \n %7D%0A  \n@@ -370,25 +370,16 @@\n eza, 0)%0A\n-        %0A\n     %0A   \n@@ -431,17 +431,19 @@\n pessura%7D\n-:\n+mm \n %7Bself.du\n@@ -447,17 +447,18 @@\n .dureza%7D\n-:\n+ (\n %7Bself.ta\n@@ -459,17 +459,147 @@\n elf.tam%7D\n-%22\n+mm)%22%0A    %0Aclass Lapiseira:%0A    def __init__(self, espessura: float):%0A        self.espessura = espessura%0A        self.grafite = None\n %0A%0Aclass \n@@ -833,16 +833,19 @@\n : null%22%0A\n+   \n         \n",
            "lines": "123"
        },
        {
            "label": "2025-10-27_14-13-44",
            "content": "@@ -556,25 +556,24 @@\n f):%0A        \n- \n if self.graf\n@@ -647,17 +647,16 @@\n : null%22%0A\n- \n         \n@@ -2020,59 +2020,8 @@\n a%5B0%5D\n-%0A    if comando == %22show%22:%0A        print(lapiseira)\n %0A%0A  \n@@ -2838,16 +2838,70 @@\n olhas)%0A%0A\n+    elif comando == %22show%22:%0A        print(lapiseira)%0A%0A\n     else\n",
            "lines": "114"
        },
        {
            "label": "2025-10-27_14-17-13",
            "content": "@@ -1947,104 +1947,14 @@\n ().s\n-trip()%0A    if not entrada:%0A    continu%0A%0Aparts = entrada.split()%0Acomando = parts%5B0%5D.lstrip('$') %0A\n+plit()\n %0A   \n@@ -1976,16 +1976,20 @@\n ) == 0:%0A\n+    \n     cont\n",
            "lines": "113"
        },
        {
            "label": "2025-10-27_14-19-13",
            "content": "@@ -160,16 +160,24 @@\n m = tam%0A\n+        \n %0A    def\n@@ -308,16 +308,29 @@\n eza, 0)%0A\n+        %0A    \n %0A    def\n@@ -552,32 +552,33 @@\n (self):%0A        \n+ \n if self.grafite \n@@ -578,33 +578,32 @@\n rafite is None:%0A\n- \n            retur\n@@ -648,32 +648,33 @@\n : null%22%0A        \n+ \n return f%22calibre\n@@ -719,16 +719,17 @@\n fite%7D%22%0A%0A\n+%0A\n     def \n@@ -1121,32 +1121,68 @@\n           return\n+ None%0A        grafite = self.grafite\n %0A        self.gr\n@@ -1185,32 +1185,55 @@\n f.grafite = None\n+%0A        return grafite\n %0A%0A    def escrev\n@@ -1413,16 +1413,17 @@\n  folhas%0A\n+%0A\n         \n@@ -1817,17 +1817,16 @@\n fite.tam\n- \n -= gasto\n@@ -1905,16 +1905,17 @@\n a = None\n+ \n %0A%0Awhile \n@@ -1970,20 +1970,16 @@\n ntrada:%0A\n-    \n     cont\n@@ -1981,23 +1981,18 @@\n  continu\n-e\n %0A%0A\n-    \n parts = \n@@ -2007,20 +2007,16 @@\n split()%0A\n-    \n comando \n@@ -2037,16 +2037,17 @@\n rip('$')\n+ \n %0A%0A    if\n@@ -2051,47 +2051,70 @@\n  if \n-comando == %22end%22:%0A        break%0A\n+len(entrada) == 0:%0A    continue%0A%0A    comando = entrada%5B0%5D\n %0A    \n-el\n if c\n@@ -2131,35 +2131,38 @@\n %22show%22:%0A        \n-if \n+print(\n lapiseira is Non\n@@ -2158,110 +2158,49 @@\n eira\n- is None:%0A            print(%22fail: lapiseira nao iniciada%22)%0A        else:%0A            print(lapiseira)\n+)%0A%0A    if comando == %22end%22:%0A        break\n %0A%0A  \n@@ -2241,37 +2241,39 @@\n calibre = float(\n-parts\n+entrada\n %5B1%5D)%0A        lap\n@@ -2303,33 +2303,8 @@\n bre)\n-%0A        print(lapiseira)\n %0A%0A  \n@@ -2456,21 +2456,23 @@\n = float(\n-parts\n+entrada\n %5B1%5D)%0A   \n@@ -2485,21 +2485,23 @@\n ureza = \n-parts\n+entrada\n %5B2%5D%0A    \n@@ -2518,21 +2518,23 @@\n o = int(\n-parts\n+entrada\n %5B3%5D)%0A   \n@@ -2929,21 +2929,23 @@\n s = int(\n-parts\n+entrada\n %5B1%5D)%0A   \n@@ -3027,8 +3027,76 @@\n alido%22)%0A\n+%0A            %0A        %0A   %0A%0A       %0A    %0A        %0A        %0A%0A        \n",
            "lines": "119"
        },
        {
            "label": "2025-10-27_15-30-02",
            "content": "@@ -1967,17 +1967,16 @@\n rip('$')\n- \n %0A%0A    if\n@@ -2266,16 +2266,37 @@\n re)%0A    \n+    print(lapiseira)%0A\n %0A    eli\n",
            "lines": "103"
        },
        {
            "label": "2025-10-27_15-31-33",
            "content": "@@ -164,17 +164,9 @@\n tam%0A\n-        \n %0A\n+\n     \n@@ -304,13 +304,9 @@\n  0)%0A\n-    \n %0A\n+\n     \n@@ -385,17 +385,16 @@\n .tam%7D%22%0A%0A\n-%0A\n class La\n@@ -1263,32 +1263,92 @@\n          return%0A\n+        gasto_total = self.grafite.gastoPorFolha() * folhas%0A\n         if self.\n@@ -1437,68 +1437,8 @@\n urn%0A\n-        gasto_total = self.grafite.gastoPorFolha() * folhas%0A\n     \n@@ -1967,16 +1967,17 @@\n rip('$')\n+ \n %0A%0A    if\n@@ -2202,239 +2202,33 @@\n     \n-if len(parts) %3C 2:%0A            print(%22fail: calibre nao informado%22)%0A            continue%0A        try:%0A            calibre = float(parts%5B1%5D)%0A        except ValueError:%0A            print(%22fail: calibre invalido%22)%0A            continue\n+calibre = float(parts%5B1%5D)\n %0A   \n@@ -2263,17 +2263,21 @@\n alibre)%0A\n+    \n %0A\n-\n     elif\n@@ -2403,125 +2403,8 @@\n nue%0A\n-        if len(parts) %3C 4:%0A            print(%22fail: parametros insuficientes%22)%0A            continue%0A        try:%0A    \n     \n@@ -2441,20 +2441,16 @@\n         \n-    \n dureza =\n@@ -2459,20 +2459,16 @@\n arts%5B2%5D%0A\n-    \n         \n@@ -2495,104 +2495,8 @@\n 3%5D)%0A\n-        except ValueError:%0A            print(%22fail: parametros invalidos%22)%0A            continue%0A\n     \n@@ -2881,262 +2881,30 @@\n     \n-if len(parts) %3C 2:%0A            print(%22fail: quantidade de folhas nao informada%22)%0A            continue%0A        try:%0A            folhas = int(parts%5B1%5D)%0A        except ValueError:%0A            print(%22fail: quantidade de folhas invalida%22)%0A            continue\n+folhas = int(parts%5B1%5D)\n %0A   \n",
            "lines": "102"
        },
        {
            "label": "2025-10-27_15-38-37",
            "content": "@@ -27,33 +27,33 @@\n nit__(self, \n-thickness\n+espessura\n : float, har\n@@ -53,27 +53,24 @@\n at, \n-hardness\n+dureza\n : str, \n-size\n+tam\n : in\n@@ -90,340 +90,187 @@\n elf.\n-thickness = thickness%0A        self.hardness = hardness%0A        self.size = size%0A%0A    def usagePerSheet(self) -%3E int:%0A        if self.hardness =\n+espessura = espessura%0A        self.dureza = dureza%0A        self.tam = tam%0A        %0A    def gastoPorFolha(self):%0A        gasto_por_folha \n = \n+%7B\n %22HB%22:\n-%0A            return 1%0A        elif self.hardness == %222B%22:%0A            return 2%0A        elif self.hardness == %224B%22:%0A            return 4%0A        elif self.hardness ==\n+1, %222B%22:2, %224B%22:4,\n  %226B%22:\n-%0A  \n+6%7D%0A\n         \n   re\n@@ -269,101 +269,55 @@\n     \n-  \n return \n-6%0A        else:%0A            raise ValueError(f%22hardness inv%C3%A1lida: %7Bself.hardness%7D%22)%0A\n+gasto_por_folha.get(self.dureza, 0)%0A    \n %0A   \n@@ -363,45 +363,39 @@\n elf.\n-thickness:.1f%7D:%7Bself.hardness\n+espessura%7D:%7Bself.dureza\n %7D:%7Bself.\n size\n@@ -390,20 +390,19 @@\n %7D:%7Bself.\n-size\n+tam\n %7D%22%0A%0A%0Acla\n@@ -404,22 +404,25 @@\n %0A%0Aclass \n-Pencil\n+Lapiseira\n :%0A    de\n@@ -438,25 +438,25 @@\n _(self, \n-thickness\n+espessura\n : float)\n@@ -474,29 +474,29 @@\n elf.\n-thickness = thickness\n+espessura = espessura\n %0A   \n@@ -529,22 +529,212 @@\n     def \n-insert\n+__str__(self):%0A        if self.grafite is None:%0A            return f%22calibre: %7Bself.espessura%7D, grafite: null%22%0A        return f%22calibre: %7Bself.espessura%7D, grafite: %7Bself.grafite%7D%22%0A%0A    def inserir\n (self, g\n@@ -875,35 +875,35 @@\n ite.\n-thickness != self.thickness\n+espessura != self.espessura\n :%0A  \n@@ -1013,16 +1013,17 @@\n f remove\n+r\n (self):%0A\n@@ -1161,22 +1161,34 @@\n def \n-writePage(self\n+escrever(self, folhas: int\n ):%0A \n@@ -1296,15 +1296,10 @@\n     \n-gasto =\n+if\n  sel\n@@ -1312,60 +1312,17 @@\n ite.\n-usagePerSheet()%0A        if self.grafite.size %3C gasto\n+tam %3C= 10\n :%0A  \n@@ -1348,24 +1348,28 @@\n il: \n-folha incompleta\n+tamanho insuficiente\n %22)%0A \n@@ -1398,89 +1398,194 @@\n     \n-self.grafite.size -= gasto%0A        print(%22folha escrita%22)%0A%0A    def __str__(self):\n+gasto_total = self.grafite.gastoPorFolha() * folhas%0A        if gasto_total + 10 %3E self.grafite.tam:%0A            folhas_possiveis = (self.grafite.tam - 10) // self.grafite.gastoPorFolha()\n %0A   \n@@ -1581,34 +1581,35 @@\n Folha()%0A        \n-if\n+   \n  self.grafite is\n@@ -1609,50 +1609,107 @@\n fite\n- is None:%0A            grafite_str = %22null%22\n+.tam -= folhas_possiveis * self.grafite.gastoPorFolha()%0A            print(%22fail: folha incompleta%22)\n %0A   \n@@ -1735,146 +1735,114 @@\n     \n+self.\n grafite\n-_str = f%22%5B%7Bself.grafite%7D%5D%22%0A        return f%22calibre: %7Bself.thickness:.1f%7D, grafite: %7Bgrafite_str%7D%22%0A%0A%0Adef main():%0A    pencil\n+.tam -= gasto_total%0A            print(f%22sucesso: escreveu %7Bfolhas%7D folhas%22)%0A%0Alapiseira\n  = None%0A\n     \n@@ -1837,20 +1837,17 @@\n  = None%0A\n-    \n+%0A\n while Tr\n@@ -1858,16 +1858,15 @@\n     \n-    line\n+entrada\n  = i\n@@ -1875,28 +1875,74 @@\n ut()\n-%0A        arg\n+.strip()%0A    if not entrada:%0A        continue%0A%0A    part\n s = \n-line\n+entrada\n .spl\n@@ -1954,163 +1954,407 @@\n     \n-    print(f%22$%7B' '.join(args)%7D%22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22init%22:%0A            pencil = Pencil(\n+comando = parts%5B0%5D.lstrip('$')%0A%0A    if comando == %22end%22:%0A        break%0A%0A    elif comando == %22show%22:%0A        if lapiseira is None:%0A            print(%22fail: lapiseira nao iniciada%22)%0A        else:%0A            print(lapiseira)%0A%0A    elif comando == %22init%22:%0A        if len(parts) %3C 2:%0A            print(%22fail: calibre nao informado%22)%0A            continue%0A        try:%0A            calibre = \n float(\n+p\n ar\n-g\n+t\n s%5B1%5D)\n-)\n %0A   \n@@ -2363,100 +2363,131 @@\n    e\n-lif args%5B0%5D == %22show%22:%0A            if pencil is not None:%0A                print(pencil)%0A    \n+xcept ValueError:%0A            print(%22fail: calibre invalido%22)%0A            continue%0A        lapiseira = Lapiseira(calibre)%0A%0A\n     \n@@ -2487,31 +2487,31 @@\n )%0A%0A    elif \n-args%5B0%5D\n+comando\n  == %22insert%22\n@@ -2516,37 +2516,36 @@\n t%22:%0A        \n-    if pencil\n+if lapiseira\n  is None:%0A  \n@@ -2546,36 +2546,32 @@\n ne:%0A            \n-    \n print(%22fail: nao\n@@ -2571,32 +2571,133 @@\n il: \n-nao existe lapis%22)%0A     \n+lapiseira nao iniciada%22)%0A            continue%0A        if len(parts) %3C 4:%0A            print(%22fail: parametros insuficientes%22)%0A\n     \n@@ -2695,32 +2695,33 @@\n es%22)%0A           \n+ \n continue%0A       \n@@ -2725,209 +2725,461 @@\n     \n-    grafite = Grafite(\n+try:%0A            calibre = \n float(\n+p\n ar\n-g\n+t\n s%5B1%5D)\n-, arg\n+%0A            dureza = part\n s%5B2%5D\n-,\n+%0A            tamanho =\n  int(\n+p\n ar\n-g\n+t\n s%5B3%5D)\n-)%0A            pencil.insert(grafite)%0A        elif args%5B0%5D == %22remove%22:%0A            if pencil is not None:%0A                pencil\n+%0A        except ValueError:%0A            print(%22fail: parametros invalidos%22)%0A            continue%0A        grafite = Grafite(calibre, dureza, tamanho)%0A        lapiseira.inserir(grafite)%0A%0A    elif comando == %22remove%22:%0A        if lapiseira is None:%0A            print(%22fail: lapiseira nao iniciada%22)%0A            continue%0A        lapiseira\n .remove\n+r\n ()%0A\n-    \n+%0A\n     \n@@ -3187,15 +3187,15 @@\n lif \n-args%5B0%5D\n+comando\n  == \n@@ -3215,74 +3215,446 @@\n     \n-    if pencil is not None:%0A                pencil.writePage()%0A%0Amain(\n+if lapiseira is None:%0A            print(%22fail: lapiseira nao iniciada%22)%0A            continue%0A        if len(parts) %3C 2:%0A            print(%22fail: quantidade de folhas nao informada%22)%0A            continue%0A        try:%0A            folhas = int(parts%5B1%5D)%0A        except ValueError:%0A            print(%22fail: quantidade de folhas invalida%22)%0A            continue%0A        lapiseira.escrever(folhas)%0A%0A    else:%0A        print(%22fail: comando invalido%22\n )%0A\n",
            "lines": "124"
        },
        {
            "label": "2025-10-27_18-52-40",
            "content": "@@ -147,16 +147,8 @@\n ness\n-.strip()\n %0A   \n@@ -1535,57 +1535,105 @@\n     \n-grafite_str = %22null%22 if self.grafite is None else\n+if self.grafite is None:%0A            grafite_str = %22null%22%0A        else:%0A            grafite_str =\n  f%22%5B\n",
            "lines": "89"
        },
        {
            "label": "2025-10-27_19-01-10",
            "content": "@@ -614,16 +614,17 @@\n size%7D%22%0A%0A\n+%0A\n class Pe\n@@ -1299,113 +1299,8 @@\n urn%0A\n-%0A        if self.grafite.size %3C= 10:%0A            print(%22fail: tamanho insuficiente%22)%0A            return%0A%0A\n     \n@@ -1340,17 +1340,16 @@\n Sheet()%0A\n-%0A\n         \n@@ -1373,20 +1373,15 @@\n ize \n--\n+%3C\n  gasto\n- %3C 10\n :%0A  \n@@ -1426,43 +1426,8 @@\n a%22)%0A\n-            self.grafite.size = 10%0A\n     \n@@ -1441,17 +1441,16 @@\n  return%0A\n-%0A\n         \n",
            "lines": "86"
        },
        {
            "label": "2025-10-27_19-08-54",
            "content": "@@ -1621,16 +1621,47 @@\n -= gasto\n+%0A        print(%22folha escrita%22)\n %0A%0A    de\n",
            "lines": "93"
        },
        {
            "label": "2025-10-27_19-19-24",
            "content": "class Grafite:\n    def __init__(self, thickness: float, hardness: str, size: int):\n        self.thickness = thickness\n        self.hardness = hardness.strip()\n        self.size = size\n\n    def usagePerSheet(self) -> int:\n        if self.hardness == \"HB\":\n            return 1\n        elif self.hardness == \"2B\":\n            return 2\n        elif self.hardness == \"4B\":\n            return 4\n        elif self.hardness == \"6B\":\n            return 6\n        else:\n            raise ValueError(f\"hardness inv\u00e1lida: {self.hardness}\")\n\n    def __str__(self):\n        return f\"{self.thickness:.1f}:{self.hardness}:{self.size}\"\n\nclass Pencil:\n    def __init__(self, thickness: float):\n        self.thickness = thickness\n        self.grafite = None\n\n    def insert(self, grafite: Grafite):\n        if self.grafite is not None:\n            print(\"fail: ja existe grafite\")\n            return\n        if grafite.thickness != self.thickness:\n            print(\"fail: calibre incompativel\")\n            return\n        self.grafite = grafite\n\n    def remove(self):\n        if self.grafite is None:\n            print(\"fail: nao existe grafite\")\n            return\n        self.grafite = None\n\n    def writePage(self):\n        if self.grafite is None:\n            print(\"fail: nao existe grafite\")\n            return\n\n        if self.grafite.size <= 10:\n            print(\"fail: tamanho insuficiente\")\n            return\n\n        gasto = self.grafite.usagePerSheet()\n\n        if self.grafite.size - gasto < 10:\n            print(\"fail: folha incompleta\")\n            self.grafite.size = 10\n            return\n\n        self.grafite.size -= gasto\n\n    def __str__(self):\n        grafite_str = \"null\" if self.grafite is None else f\"[{self.grafite}]\"\n        return f\"calibre: {self.thickness:.1f}, grafite: {grafite_str}\"\n\n\ndef main():\n    pencil = None\n    while True:\n        line = input()\n        args = line.split()\n        print(f\"${' '.join(args)}\")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            pencil = Pencil(float(args[1]))\n        elif args[0] == \"show\":\n            if pencil is not None:\n                print(pencil)\n        elif args[0] == \"insert\":\n            if pencil is None:\n                print(\"fail: nao existe lapis\")\n                continue\n            grafite = Grafite(float(args[1]), args[2], int(args[3]))\n            pencil.insert(grafite)\n        elif args[0] == \"remove\":\n            if pencil is not None:\n                pencil.remove()\n        elif args[0] == \"write\":\n            if pencil is not None:\n                pencil.writePage()\n\nmain()\n",
            "lines": "92"
        }
    ]
}